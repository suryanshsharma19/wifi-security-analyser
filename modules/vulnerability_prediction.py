import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# Example training data
data = {
    "Encryption": [0, 1, 1, 0, 2],  # 0=WEP, 1=WPA2, 2=WPA3
    "Signal Strength": [-80, -50, -60, -90, -40],
    "Channel Congestion": [5, 2, 3, 6, 1],
    "Vulnerable": [1, 0, 0, 1, 0],  # 1=Vulnerable, 0=Secure
}
df = pd.DataFrame(data)

def train_model():
    # Training and testing the model
    X = df[["Encryption", "Signal Strength", "Channel Congestion"]]
    y = df["Vulnerable"]
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

    model = RandomForestClassifier()
    model.fit(X_train, y_train)
    accuracy = model.score(X_test, y_test)
    print(f"Model Accuracy: {accuracy * 100:.2f}%")
    return model

def predict_vulnerability(model, network_data):
    # Predict risk for a new network
    prediction = model.predict([network_data])
    return "Vulnerable" if prediction[0] == 1 else "Secure"

# Example execution
if __name__ == "__main__":
    model = train_model()
    new_network = [1, -70, 3]  # WPA2, -70 dBm, medium congestion
    result = predict_vulnerability(model, new_network)
    print(f"Network Security Status: {result}") 